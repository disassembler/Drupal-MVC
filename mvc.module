<?php
/**
 * @author Samuel Leathers
 * @copyright Copyright (c) 2011, The Pennsylvania State University
 * version 0.1
 * mvc.module
 *
 * @package mvc
 */


// $Id$

/**
 * This module allows creating mvc applications from within drupal
 *
 */

/**
 * Instantiate class autoloader
 */
module_load_include('inc', 'mvc', 'autoload');

/**
 * Implementation of hook_init().
 */
function mvc_init() {
  global $mvc_modules;
  $mvc_modules = module_invoke_all('mvc_app');
  foreach($mvc_modules as $mod) {
    AutoLoader::addPath($mod['path']);
  }
  AutoLoader::addPath(drupal_get_path('module','mvc'));
}


/**
 * Sample Implementation of hook_mvc_app
 *
 * {{{
 * function mvc_mvc_app() {
 * 	$mvc = new ArrayObject();
 * 	$mvc['base'] = 'mvc';
 * 	$mvc['path'] = drupal_get_path('module','mvc');
 * 	$mvc['blocks'] = array(array(
 * 	  'name' => 'Block Name',
 * 	  'title' => 'Block Title',
 * 	  'controller' => 'controller',
 * 	  'method' => 'method',
 * 	  'args' => array('arg1','arg2'),
 * 	  ));
 * 	$mvc['menu_items'] = array(array(
 * 	  'path' => 'path/to/wherever',
 * 	  'title' => 'Menu Title',
 * 	  'controller' => 'controller',
 * 	  'method' => 'method',
 * 	  'args' => array('arg1','arg2'),
 * 	));
 * 	return $mvc;
 * }
 * }}}
 *
 */



/**
 * Implementation of hook_menu().
 */
function mvc_menu() {
  global $mvc_modules;
  $items = array();
  // Graduate Application Page
  foreach($mvc_modules as $mod) {
    $items[ $mod['base'].'/%/%'] = array(
      'page callback' => 'mvc_controller',
      'page arguments' => array($mod['path'],$mod['base']),
      'page arguments' => array($mod['path'],$mod['base'],NULL,NULL,NULL),
      'access callback' => TRUE,
      'type' => MENU_CALLBACK
    );
    foreach($mod['menu_items'] as $menu) {
      if(!isset($menu['args'])) {
        $menu['args'] = NULL;
      }
      if(!isset($menu['controller'])) {
        $menu['controller'] = NULL;
      }
      if(!isset($menu['controller'])) {
        $menu['method'] = NULL;
      }
      $items[$menu['path']] = array(
        'title' => $menu['title'],
        'page callback' => 'mvc_controller',
        'page arguments' => array($mod['path'],NULL,$menu['path'],$menu['controller'],$menu['method'],$menu['args']),
        'access callback' => TRUE,
        'type' => MENU_NORMAL_ITEM
      );
    }
  }
  dpm($items);
  return $items;
}
/**
 * Implements hook_block_info()
 */
function mvc_block_info() {
  global $mvc_modules;
  foreach($mvc_modules as $mod) {
    foreach($mod['blocks'] as $block) {
      $blocks[$block['name']] = array(
        'info' => $block['title'],
        'region' => $block['region'],
        'pages' => $block['pages'],
        'cache' => DRUPAL_NO_CACHE
      );
    }
  }
  return $blocks;
}
/**
 * Implements hook_block_view()
 */
function mvc_block_view($delta = '') {
  global $mvc_modules;
  $block = array();

  foreach($mvc_modules as $mod) {
    foreach($mod['blocks'] as $block) {
      switch ($delta) {
      case $block['name']:
        $block['subject'] = $block['title'];
        $block['content'] = mvc_controller($mod['path'],NULL,NULL,$block['controller'],$block['method'],$block['args']);
        break;
      }
    }
  }
  return $block;
}

/**
 * dispatcher function for controller
 * @return object View rendered by controller
 */
function mvc_controller($modpath,$base,$menu_path = NULL,$pass_controller = NULL,$pass_method = NULL, $pass_args = NULL) {
  global $controllerName, $method, $module_path;
  /**
   * If `pass_controller` is not set, evaluate from args()
   * Otherwise, `controllerName` is what is passed as a parameter
   */
  $module_path = $modpath;
  if(!$pass_controller) {
    $controllerName = arg(1);
  }
  else {
    $controllerName = $pass_controller;
  }
  $fullControllerName = $controllerName.'Controller';
  /** 
   * If `pass_method` is not set, set to 2nd argument
   * Otherwise, `method` is what is passed as a parameter
   */
  if(!$pass_method) {
    $method = arg(2);
  }
  else {
    $method = $pass_method;
  }
  /**
   * If `pass_args` is not set, set to remaining arguments
   * Otherwise, `params` is what is passed as parameter
   */
  if(!$pass_args) {
    $args = arg();
    if(!$menu_path) {
      $exp_args = array($controllerName,$method,$base);
      dpm($exp_args);
    }
    else {
      $exp_args = explode('/',$menu_path);
    }
    $diff = array_diff($args,$exp_args);
    $params = array_merge($diff);
  }
  else {
    $params = $pass_args;
  }

  if(class_exists($fullControllerName)) {
    $controller = new $fullControllerName;
    if($controller->access()) {
      if(method_exists($controller, $method)) {
        return $controller->$method($params);
      }
      else {
        drupal_not_found();
      }
    }
    else {
      drupal_access_denied();
    }
  }
  else {
    drupal_not_found();
  }
}
?>
